@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DeleteStudentFromClassCommandParser" as DeleteStudentFromClassCommandParser LOGIC_COLOR
participant "s:DeleteStudentFromClassByIdCommand" as DeleteStudentFromClassByIdCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute(deleteStudent)
activate LogicManager

LogicManager -> AddressBookParser : parseCommand(deleteStudent)
activate AddressBookParser

create DeleteStudentFromClassCommandParser
AddressBookParser -> DeleteStudentFromClassCommandParser
activate DeleteStudentFromClassCommandParser

DeleteStudentFromClassCommandParser --> AddressBookParser
deactivate DeleteStudentFromClassCommandParser

AddressBookParser -> DeleteStudentFromClassCommandParser : parse(studentId, module, tutorial)
activate DeleteStudentFromClassCommandParser

create DeleteStudentFromClassByIdCommand
DeleteStudentFromClassCommandParser -> DeleteStudentFromClassByIdCommand
activate DeleteStudentFromClassByIdCommand

DeleteStudentFromClassByIdCommand --> DeleteStudentFromClassCommandParser :
deactivate DeleteStudentFromClassByIdCommand

DeleteStudentFromClassCommandParser --> AddressBookParser : s
deactivate DeleteStudentFromClassCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DeleteStudentFromClassCommandParser -[hidden]-> AddressBookParser
destroy DeleteStudentFromClassCommandParser

AddressBookParser --> LogicManager : s
deactivate AddressBookParser

LogicManager -> DeleteStudentFromClassByIdCommand : execute(m)
activate DeleteStudentFromClassByIdCommand

DeleteStudentFromClassByIdCommand -> Model : searchPersonByPredicate()
activate Model

Model --> DeleteStudentFromClassByIdCommand : p
deactivate Model

DeleteStudentFromClassByIdCommand -> Model : deletePersonFromTutorialClass(p)
activate Model

Model --> DeleteStudentFromClassByIdCommand
deactivate Model

create CommandResult
DeleteStudentFromClassByIdCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteStudentFromClassByIdCommand
deactivate CommandResult

DeleteStudentFromClassByIdCommand --> LogicManager : r
deactivate DeleteStudentFromClassByIdCommand

[<--LogicManager
deactivate LogicManager

@enduml
